jobs:
  include:
  - stage: Build

    sudo: required
    language: minimal
    services:
    - docker
    script: docker build --build-arg CODECOV_TOKEN --build-arg "APP_VERSION=$(make version)" -t "${DOCKER_USER}/$(make name):$(make version)" .
    after_success:
    - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
    - docker push "${DOCKER_USER/$(make name):$(make version)"

  - stage: Publish

    sudo: required
    language: minimal
    services:
    - docker
    script:
    - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
    - curl -q -sSL --max-time 10 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "docker_promote"
    - scripts/docker_promote "${DOCKER_USER}/$(make name)" "$(make version)"
    after_success:
    - curl -q -sSL --max-time 10 -X POST https://goreportcard.com/checks?repo=github.com/ViBiOh/spurf

  - stage: Deploy

    language: minimal
    script: |
     sed \
        -e "s|\${ENEDIS_EMAIL}|${ENEDIS_EMAIL}|g" \
        -e "s|\${ENEDIS_PASSWORD}|${ENEDIS_PASSWORD}|g" \
        -e "s|\${SPURF_DATABASE_HOST}|${SPURF_DATABASE_HOST}|g" \
        -e "s|\${SPURF_DATABASE_NAME}|${SPURF_DATABASE_NAME}|g" \
        -e "s|\${SPURF_DATABASE_USER}|${SPURF_DATABASE_USER}|g" \
        -e "s|\${SPURF_DATABASE_PASS}|${SPURF_DATABASE_PASS}|g" \
        -e "s|\\\$|\$\$|g" \
        docker-compose.yml > docker-compose-env.yml
      curl -q -sSL --max-time 10 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "deploy"
      scripts/deploy "$(make name)" "@docker-compose-env.yml"

stages:
  - Build
  - name: Publish
    if: branch = master && type = push
  - name: Deploy
    if: branch = master && type = push

notifications:
  email: false
